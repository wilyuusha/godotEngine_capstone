[gd_scene load_steps=7 format=2]

[ext_resource path="res://Scripts/sceneTransition.gd" type="Script" id=1]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

// Ranges from 0 to 1 over the course of the transition.
// We use this to actually animate the shader.
uniform float progress : hint_range(0, 1);

// Size of each diamond, in pixels.
uniform float diamondPixelSize = 10.0f;

void fragment() {
	float xFraction = fract(FRAGCOORD.x / diamondPixelSize);
	float yFraction = fract(FRAGCOORD.y / diamondPixelSize);
	float xDistance = abs(xFraction - 0.5);
	float yDistance = abs(yFraction - 0.5);
	if (xDistance + yDistance + UV.x + UV.y > progress * 4.0f) {
		discard;
	}
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/progress = 0.0
shader_param/diamondPixelSize = 70.0

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=10]
resource_name = "fancy_transition_backward"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Animation" id=9]
resource_name = "fancy_transition_forward"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[node name="scene_transition" type="CanvasLayer"]
pause_mode = 2
script = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
modulate = Color( 0, 0, 0, 1 )
material = SubResource( 8 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 5 )
anims/fancy_transition_backward = SubResource( 10 )
anims/fancy_transition_forward = SubResource( 9 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
